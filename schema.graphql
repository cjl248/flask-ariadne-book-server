schema {
  query: Query
  mutation: Mutation
}

type Query {
  authors: [Author]!
  author(id: ID!): Author

  books: [Book]!
  book(id: ID!): Book
}

type Author {
  id: ID!
  first_name: String!
  last_name: String!
  books: [Book]!
}

type Book {
  id: ID!
  author: Author!
  title: String!
  pages: Int!
}

type Mutation {
  add_author(first_name: String, last_name: String): newAuthorPayload!
  update_first_name(id: ID!, name: String): updateNamePayload!
  update_last_name(id: ID!, name: String): updateNamePayload!
  delete_author(id: ID!): deleteAuthorPayload!

  add_book(title: String!, pages: Int!, author_id: Int!): addBookPayload
}

type newAuthorPayload {
  success: Boolean!
  author: Author
}

type updateNamePayload {
  success: Boolean!
  author: Author
}

type deleteAuthorPayload {
  success: Boolean!
  author: Author
}
type addBookPayload {
  success: Boolean!
  book: Book
}
